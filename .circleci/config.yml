version: 2
jobs:
  build:
    docker:
      - image: circleci/node:10.20.1
    steps:
      - checkout

      - restore_cache:
          name: Restoring Yarn package cache
          key: yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: Setting Yarn offline mirror
          command: yarn config set yarn-offline-mirror ~/.cache/yarn && yarn config set yarn-offline-mirror-pruning true

      - run:
          name: Installing dependencies
          command: yarn install --prefer-offline --frozen-lockfile

      - save_cache:
          name: Storing Yarn package cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Checking dependency integrity
          command: yarn check --integrity --verify-tree

      - run:
          name: Build dependencies
          command: yarn build

      - run:
          name: Running tests
          command: |
            mkdir -p /tmp/test-reports
            yarn run test --ci --coverage --reporters=default --reporters=jest-junit
          environment:
            - JEST_JUNIT_OUTPUT: /tmp/test-reports/jest/junit.xml

      - store_test_results:
          path: /tmp/test-reports

      - run:
          name: Uploading test coverage
          command: bash <(curl -s https://codecov.io/bash) || echo 'Codecov failed to upload'

      - run:
          name: Running prettier
          command: yarn run ci:lint:fmt

      - run:
          name: Running tslint
          command: yarn run ci:lint:ts

      - run:
          name: Running typechecker
          command: yarn run tsc

  publish-typescript:
    docker:
      - image: circleci/node:10.20.1
    working_directory: ~/graphql-rate-limit
    steps:
      - checkout
      - run:
          name: Determine Package Version
          command: |
            touch ~/.shared_env
            CURRENT_PACKAGE_VERSION=$(node -p "require('./package.json').version")
            if [ "${CIRCLE_BRANCH}" != "master" ]; then
              PACKAGE_VERSION=${CURRENT_PACKAGE_VERSION}-dev$(date +%s)
              sed -i -e "s/\"version\": \"${CURRENT_PACKAGE_VERSION}\",$/\"version\": \"${PACKAGE_VERSION}\",/" package.json
            else
              PACKAGE_VERSION=$CURRENT_PACKAGE_VERSION
            fi
            echo "export PACKAGE_VERSION=$PACKAGE_VERSION" >> ~/.shared_env
      - run:
          name: Build and publish
          command: |
            yarn
            yarn publish:gemfury
      - run:
          name: Print Package Version
          command: |
            source ~/.shared_env
            echo "Your package version is: ${PACKAGE_VERSION}"
            echo "Add this to your package.json and run yarn (if applicable) to use this development version"

workflows:
  version: 2
  build:
    jobs:
      - build-and-test:
          jobs:
            - build
      - publish:
          context: wave-publish-gemfury
          requires:
            - build
